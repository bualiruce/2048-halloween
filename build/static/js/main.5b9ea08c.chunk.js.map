{"version":3,"sources":["components/BoardCell/BoardCell.tsx","components/BoardCell/index.ts","components/Board/Board.tsx","components/Board/index.ts","components/Cell/Cell.tsx","components/Cell/CellNew.tsx","components/Cell/CellMove.tsx","components/Cell/CellMerge.tsx","components/Game/NewGameButton.tsx","components/Game/Header.tsx","components/Game/Footer.tsx","components/Game/DoneCover.tsx","hooks/useMount.ts","sound/move.mp3","sound/gameover.mp3","components/Game/utils.ts","components/Game/useGame.ts","hooks/useSlide.ts","components/Game/Game.tsx","components/Game/index.ts","components/Helmet/index.tsx","components/Helmet/Helmet.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","_ref","x","y","width","position","top","concat","left","height","backgroundColor","borderRadius","BoardCell","_ref2","classes","_jsx","className","_root","maxWidth","maxHeight","_defineProperty","breakpoints","down","Board","children","slideHandlers","_objectWithoutProperties","_excluded","cells","Array","fill","_Fragment","_jsxs","_objectSpread","map","row","cell","colors","value","display","justifyContent","alignItems","color","userSelect","Cell","_ref2$className","cx","transform","animationFillMode","animationTimingFunction","animationName","animationDelay","animationDuration","from","to","CellNew","final","CellMove","_ref2$hideAfterMove","hideAfterMove","move","moveAndHide","CellMerge","unit","spacing","contained","margin","marginLeft","NewGameButton","onNewGame","MuiButton","variant","onClick","React","justify","flexWrap","padding","header","marginBottom","block","minWidth","flexDirection","Header","step","score","bestScore","MuiTypography","Block","title","MuiGrid","container","wrap","href","item","animation","transformOrigin","DoneCover","isDone","localStorageData","JSON","parse","localStorage","getItem","grid","useMount","_useState","useState","_useState2","_slicedToArray","isMount","setIsMount","useEffect","generateGrid","undefined","size","length","id","Date","getTime","converGrid","randomSetCell","_grid","numOfCells","arguments","list","push","getEmptyCoords","i","index","Math","floor","random","_list$index","splice","playMusic","sound","audio","Audio","console","log","play","removeAnimation","audioGO","cur","up","STORAGE_NAME","initialState","initiated","changing","reducer","state","action","newState","type","storageValue","stringify","setItem","updateLocalStorage","useGame","_useReducer","useReducer","_useReducer2","dispatch","storageState","useCallback","slideTo","diffX","diffY","dir","abs","_move","audioMove","changed","j","k","SIZE","x1","y1","x2","y2","setTimeout","afterAnimation","isDown","useSlide","callback","halt","onMouseEnd","event","preventDefault","screenX","screenY","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","touch","touches","onTouchEnd","changedTouches","controller","Game","_useGame","key","Footer","Helmet","App","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.5b9ea08c.chunk.js","sourcesContent":["import * as React from \"react\";\nimport cx from \"classnames\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\nimport cellImg from \"../../static/cell.jpg\";\n\nimport { BoardCellProps, StylesProps } from \"./types\";\n\nconst useStyles = makeStyles<Theme, StylesProps>(theme => {\n  return createStyles({\n    root: ({ x, y }) => {\n      const width = \"(100% - 5 * 10px) / 4\";\n      return {\n        position: \"absolute\",\n        top: `calc(${width}  * ${y} + 10px * ${y + 1})`,\n        left: `calc(${width} * ${x} + 10px * ${x + 1})`,\n\n        width: `calc(${width})`,\n        height: `calc(${width})`,\n\n        backgroundColor: \"#bcaaa4\",\n        // backgroundImage: \"../../static/cell.jpg\",\n        borderRadius: 4\n      };\n    }\n  });\n});\n\nconst BoardCell: React.FC<BoardCellProps> = ({ x, y }) => {\n  const classes = useStyles({ x, y });\n\n  return <div className={`${classes.root} my-cell-style`} />;\n};\n\nexport default BoardCell;\n","import BoardCell from \"./BoardCell\";\n\nexport default BoardCell;\n","import * as React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\n\nimport BoardCell from \"../BoardCell\";\n\nconst useStyles = makeStyles<Theme>(theme => {\n  return createStyles({\n    root: {\n      position: \"relative\",\n      width: \"50vw\",\n      maxWidth: 640,\n      height: \"50vw\",\n      maxHeight: 640,\n\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"90vw\",\n        height: \"90vw\"\n      },\n\n      backgroundColor: \"#a1887f\",\n      borderRadius: 4\n    }\n  });\n});\n\ninterface MouseEventHandler {\n  (event: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\n}\ninterface TouchEventHandler {\n  (event: React.TouchEvent<HTMLDivElement>): void;\n}\ninterface BoardProps {\n  onMouseDown?: null | MouseEventHandler;\n  onMouseUp?: null | MouseEventHandler;\n  onMouseLeave?: null | MouseEventHandler;\n  onTouchStart?: null | TouchEventHandler;\n  onTouchEnd?: null | TouchEventHandler;\n}\nconst Board: React.FC<BoardProps> = ({ children, ...slideHandlers }) => {\n  const classes = useStyles({});\n  const cells: any[][] = Array(4).fill(Array(4).fill(null));\n\n  return ( \n  <>\n    <div className={classes.root} {...slideHandlers}>\n    {cells.map((row, x) => {\n      return row.map((cell, y) => {\n        return <BoardCell key={`board-cell-${x}-${y}`} x={x} y={y} />;\n      });\n    })}\n    {children}\n    </div>\n    \n  </>\n  );\n};\n\nexport default Board;\n","import Board from \"./Board\";\n\nexport default Board;\n","import * as React from \"react\";\nimport cx from \"classnames\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\n\nimport MuiTypography from \"@material-ui/core/Typography\";\n\nimport { CellProps } from \"./types\";\n\nconst colors = {\n  \"color-2\": \"#ff6666\",\n  \"color-4\": \"#ff9999\",\n  \"color-8\": \"#ff6633\",\n  \"color-16\": \"#ff9966\",\n  \"color-32\": \"#ff3300\",\n  \"color-64\": \"#ff6600\",\n  \"color-128\": \"#cc3333\",\n  \"color-256\": \"#cc6666\",\n  \"color-512\": \"#cc9966\",\n  \"color-1024\": \"#cc6600\",\n  \"color-2048\": \"#993333\",\n  \"color-4096\": \"#996666\",\n  \"color-8192\": \"#996699\"\n};\n\nconst useStyles = makeStyles<Theme, Omit<CellProps, \"className\">>(theme => {\n  const width = \"(100% - 5 * 10px) / 4\";\n  return createStyles({\n    root: ({ x, y, value }) => {\n      return {\n        position: \"absolute\",\n        top: `calc(${width}  * ${y} + 10px * ${y + 1})`,\n        left: `calc(${width} * ${x} + 10px * ${x + 1})`,\n\n        width: `calc(${width})`,\n        height: `calc(${width})`,\n\n        backgroundColor: colors[`color-${value}`],\n        borderRadius: 4,\n\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\n        \"& > *\": {\n          color: \"white\",\n          userSelect: \"none\"\n        }\n      };\n    }\n  });\n});\n\n// new:   from === null && to !== null\n// move:  from !== null && to === null\n// merge: from !== null && to !== null\n// stay:  from === null && to === null\nconst Cell: React.FC<CellProps> = ({ className = \"\", x, y, value }) => {\n  const classes = useStyles({ x, y, value });\n\n  return (\n    <div className={cx(classes.root, className)}>\n      <h5>{value}</h5>\n    </div>\n  );\n};\n\nexport default Cell;\n","import * as React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\n\nimport { CellNewProps } from \"./types\";\n\nimport Cell from \"./Cell\";\n\nconst useStyles = makeStyles<Theme>(theme => {\n  return createStyles({\n    root: {\n      transform: \"scale(0)\",\n      animationFillMode: \"forwards\",\n      animationTimingFunction: \"cubic-bezier(0.25, 0, 0.5, 1)\",\n      animationName: \"$zoomIn\",\n      animationDelay: \"0.25s\",\n      animationDuration: \"0.25s\"\n    },\n    \"@keyframes zoomIn\": {\n      from: { transform: \"scale(0)\" },\n      to: { transform: \"scale(1)\" }\n    }\n  });\n});\n\nconst CellNew: React.FC<CellNewProps> = ({ final }) => {\n  const classes = useStyles({});\n  return (\n    <Cell\n      className={classes.root}\n      x={final.x}\n      y={final.y}\n      value={final.value}\n    />\n  );\n};\n\nexport default CellNew;\n","import * as React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\n\nimport { CellMoveProps } from \"./types\";\n\nimport Cell from \"./Cell\";\n\nconst useStyles = ({ from, final }: Omit<CellMoveProps, \"hideAfterMove\">) => {\n  return makeStyles<Theme>(theme => {\n    const width = \"(100% - 5 * 10px) / 4\";\n    return createStyles({\n      \"@keyframes move\": {\n        from: {\n          top: `calc(${width}  * ${from.y} + 10px * ${from.y + 1})`,\n          left: `calc(${width} * ${from.x} + 10px * ${from.x + 1})`\n        },\n        to: {\n          top: `calc(${width}  * ${final.y} + 10px * ${final.y + 1})`,\n          left: `calc(${width} * ${final.x} + 10px * ${final.x + 1})`\n        }\n      },\n      \"@keyframes zoomOut\": {\n        from: { transform: \"scale(1)\" },\n        to: { transform: \"scale(0)\" }\n      },\n      move: {\n        animationFillMode: \"forwards\",\n        animationTimingFunction: \"cubic-bezier(0.25, 0, 0.5, 1)\",\n        animationName: \"$move\",\n        animationDelay: \"0s\",\n        animationDuration: \"0.25s\"\n      },\n      moveAndHide: {\n        animationFillMode: \"forwards\",\n        animationTimingFunction: \"cubic-bezier(0.25, 0, 0.5, 1)\",\n        animationName: \"$move, $zoomOut\",\n        animationDelay: \"0s, 0.25s\",\n        animationDuration: \"0.25s, 0.25s\"\n      }\n    });\n  });\n};\n\nconst CellMove: React.FC<CellMoveProps> = ({\n  from,\n  final,\n  hideAfterMove = false\n}) => {\n  const classes = useStyles({ from, final })({});\n\n  return (\n    <Cell\n      className={hideAfterMove ? classes.moveAndHide : classes.move}\n      x={final.x}\n      y={final.y}\n      value={final.value}\n    />\n  );\n};\n\nexport default CellMove;\n","import * as React from \"react\";\n\nimport { CellMergeProps } from \"./types\";\n\nimport CellMove from \"./CellMove\";\nimport CellNew from \"./CellNew\";\n\nconst CellMerge: React.FC<CellMergeProps> = ({ from, to, final }) => {\n  return (\n    <>\n      <CellMove from={to} final={{ ...final, value: to.value }} hideAfterMove />\n      <CellMove\n        from={from}\n        final={{ ...final, value: from.value }}\n        hideAfterMove\n      />\n      <CellNew final={final} />\n    </>\n  );\n};\n\nexport default CellMerge;\n","import * as React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\n\nimport MuiButton from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles<Theme>(theme => {\n  const unit = theme.spacing();\n  return createStyles({\n    contained: {\n      margin: unit * 2,\n      marginLeft: \"auto\",\n      backgroundColor: \"#ffa726\",\n      \"&:hover\": {\n        backgroundColor: \"#fb8c00\"\n      }\n    }\n  });\n});\ninterface NewGameButtonProps {\n  onNewGame: () => void;\n}\nconst NewGameButton: React.FC<NewGameButtonProps> = ({ onNewGame }) => {\n  const classes = useStyles({});\n  return (\n    <MuiButton\n      classes={{\n        contained: classes.contained\n      }}\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={onNewGame}\n    >\n      New Game\n    </MuiButton>\n  );\n};\n\nexport default React.memo(NewGameButton);\n","import * as React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\n\nimport MuiTypography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles<Theme>(theme => {\n  return createStyles({\n    root: {\n      display: \"flex\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      backgroundColor: '#ffffff40',\n      padding: '20px 10px',\n      borderRadius: '5px',\n    },\n    header: {\n      marginBottom: theme.spacing(2)\n    },\n    block: {\n      minWidth: 64,\n      padding: 8,\n      backgroundColor: \"#bcaaa4\",\n      borderRadius: 4,\n\n      display: \"flex\",\n      flexDirection: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n\n      \"& > span\": {\n        color: \"#efebe9\"\n      },\n      \"& > h6\": {\n        color: \"white\"\n      }\n    }\n  });\n});\n\ninterface HeaderProps {\n  step: number;\n  score: number;\n  bestScore: number;\n}\nconst Header: React.FC<HeaderProps> = ({ step, score, bestScore }) => {\n  const classes = useStyles({});\n\n  const Block = React.memo(\n    ({ title, value }: { title: string; value: number }) => {\n      return (\n        <div className={classes.block}>\n          <MuiTypography variant=\"caption\">{title}</MuiTypography>\n          <MuiTypography variant=\"h6\">{value}</MuiTypography>\n        </div>\n      );\n    }\n  );\n\n  return (\n    <div className={`${classes.root} my-header`}>\n      <div className={`${classes.header} my-title`}>\n        <MuiTypography variant=\"h3\" display=\"inline\">\n          2048 Halloween Game\n        </MuiTypography>\n      </div>\n      {/* <MuiGrid container className=\"header-info\" spacing={2} wrap=\"nowrap\">\n        <div className=\"header-privacy \">\n         <a href=\"./privacy.html\" className=\"header-privacy__link makeStyles-block-5\">Privacy Policy</a>\n         <a href=\"./about.html\" className=\"header-privacy__link makeStyles-block-5\">About Game</a>\n        </div>\n   \n        <div className=\"header-score\">\n          <MuiGrid item>\n            <Block title=\"Step\" value={step} />\n          </MuiGrid>\n          <MuiGrid item>\n            <Block title=\"Score\" value={score} />\n          </MuiGrid>\n          <MuiGrid item>\n            <Block title=\"Best\" value={bestScore} />\n          </MuiGrid>\n        </div>\n      </MuiGrid> */}\n    </div>\n  );\n};\n\nexport default React.memo(Header);\n","import * as React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\n\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport MuiGrid from \"@material-ui/core/Grid\";\nimport MuiLink from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles<Theme>(theme => {\n  return createStyles({\n    root: {\n      display: \"flex\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      backgroundColor: '#ffffff40',\n      padding: '20px 10px',\n      borderRadius: '5px',\n      margin: \"20px 0\",\n    },\n    block: {\n      minWidth: 64,\n      padding: 8,\n      backgroundColor: \"#bcaaa4\",\n      borderRadius: 4,\n\n      display: \"flex\",\n      flexDirection: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n\n      \"& > span\": {\n        color: \"#efebe9\"\n      },\n      \"& > h6\": {\n        color: \"white\"\n      }\n    }\n  });\n});\n\ninterface HeaderProps {\n  step: number;\n  score: number;\n  bestScore: number;\n}\nconst Header: React.FC<HeaderProps> = ({ step, score, bestScore }) => {\n  const classes = useStyles({});\n\n  const Block = React.memo(\n    ({ title, value }: { title: string; value: number }) => {\n      return (\n        <div className={classes.block}>\n          <MuiTypography variant=\"caption\">{title}</MuiTypography>\n          <MuiTypography variant=\"h6\">{value}</MuiTypography>\n        </div>\n      );\n    }\n  );\n\n  return (\n    <div className={`${classes.root} my-footer`}>\n      <MuiGrid container className=\"header-info\" wrap=\"nowrap\">\n        <div className=\"header-privacy \">\n         <a href=\"./privacy.html\" className=\"header-privacy__link makeStyles-block-5\">Privacy Policy</a>\n         <a href=\"./about.html\" className=\"header-privacy__link makeStyles-block-5\">About Game</a>\n        </div>\n   \n        <div className=\"header-score\">\n          <MuiGrid item>\n            <Block title=\"Step\" value={step} />\n          </MuiGrid>\n          <MuiGrid item>\n            <Block title=\"Score\" value={score} />\n          </MuiGrid>\n          <MuiGrid item>\n            <Block title=\"Best\" value={bestScore} />\n          </MuiGrid>\n        </div>\n      </MuiGrid>\n    </div>\n  );\n};\n\nexport default React.memo(Header);\n","import * as React from \"react\";\nimport cx from \"classnames\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\n\nimport MuiTypography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles<Theme>(theme => {\n  return createStyles({\n    root: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n\n      backgroundColor: \"rgba(0,0,0,0.6)\",\n\n\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n\n      \"& > h4\": {\n        color: \"white\"\n      }\n    },\n    animation: {\n      transformOrigin: \"center\",\n      animationFillMode: \"forwards\",\n      animationTimingFunction: \"ease-in-out\",\n      animationName: \"$zoomIn\",\n      animationDelay: \"0s\",\n      animationDuration: \"0.55s\"\n    },\n    \"@keyframes zoomIn\": {\n      \"0%\": {\n        transform: \"scale(0)\",\n        borderRadius: \"50%\"\n      },\n      \"50%\": {\n        borderRadius: \"50%\"\n      },\n      \"100%\": {\n        transform: \"scale(1)\",\n        borderRadius: \"0%\"\n      }\n    }\n    // \"@keyframes radius\": {\n    //   from: {\n    //     borderRadius: \"50%\"\n    //   },\n    //   to: {\n    //     borderRadius: \"0%\"\n    //   }\n    // }\n  });\n});\n\nconst DoneCover: React.FC<{ isDone: boolean }> = ({ isDone }) => {\n  const classes = useStyles({});\n  const localStorageData = JSON.parse(localStorage.getItem('game-state') || '{}');\n\n  const { grid, score, bestScore, step } = localStorageData;\n\n\n  if (!isDone) return null;\n\n  return (\n    <div className={cx(classes.root, classes.animation)}>\n      <MuiTypography variant=\"h4\">Thanks for Playing. Your result\n      <p>Step: {step}</p>\n      <p>Score: {score}</p>\n      <p>Best Score: {bestScore}</p></MuiTypography>\n    </div>\n  );\n};\n\nexport default DoneCover;\n","import { useEffect, useState } from \"react\";\n\nconst useMount = () => {\n  const [isMount, setIsMount] = useState(false);\n\n  useEffect(() => {\n    setIsMount(true);\n    return () => {\n      setIsMount(false);\n    };\n  }, []);\n\n  return { isMount };\n};\n\nexport default useMount;\n","export default __webpack_public_path__ + \"static/media/move.cfb4529c.mp3\";","export default __webpack_public_path__ + \"static/media/gameover.2a4c01d5.mp3\";","import { Grid, GridCell, Cell } from \"./types\";\nimport audioMove from '../../sound/move.mp3'\nimport audioGO from '../../sound/gameover.mp3'\nconst SIZE = 4;\n\nfunction generateMatrix(size: number) {\n  return Array.from({ length: size }, () =>\n    Array.from({ length: size }, () => null)\n  );\n}\n\nexport function generateGrid(grid?: (number | null)[][]): Grid {\n  if (grid === undefined) return generateMatrix(SIZE);\n  return grid.map((row, y) => {\n    return row.map((value, x) => {\n      if (value === null) return null;\n      const cell: Cell = { x, y, value };\n      const id = new Date().getTime();\n      return { id, from: null, to: null, final: cell };\n    });\n  });\n}\n\nexport function converGrid(grid: Grid): (number | null)[][] {\n  return grid.map(row => {\n    return row.map(cell => {\n      if (cell === null) return null;\n      return cell.final.value;\n    });\n  });\n}\n\nfunction getEmptyCoords(grid: Grid): [number, number][] {\n  const list = [];\n  for (let y = 0; y < grid.length; y++) {\n    for (let x = 0; x < grid[y].length; x++) {\n      if (grid[y][x] === null) list.push([x, y]);\n    }\n  }\n  return list;\n}\n\nexport function randomSetCell(_grid: Grid, numOfCells: number = 1) {\n  const grid = _grid.map<(GridCell | null)[]>(row =>\n    row.map<GridCell | null>((cell: GridCell | null) => cell)\n  );\n  const list = getEmptyCoords(grid);\n  if (list.length < numOfCells) return grid;\n  for (let i = 0; i < numOfCells; i++) {\n    const index = Math.floor(Math.random() * list.length);\n    const [x, y] = list[index];\n    const cell: Cell = { x, y, value: 2 };\n    const id = new Date().getTime();\n    grid[y][x] = { id, from: null, to: cell, final: cell };\n    list.splice(index, 1);\n  }\n  return grid;\n}\nfunction playMusic(sound) {\n  const audio = new Audio(sound);\n  console.log(audio);\n  \n  audio.play();\n}\n\nexport function move(_grid: Grid, type: \"up\" | \"down\" | \"left\" | \"right\") {\n  playMusic(audioMove)\n  const grid = _grid.map<(GridCell | null)[]>(row =>\n    row.map<GridCell | null>((cell: GridCell | null) => cell)\n  );\n  let score = 0,\n    changed = false;\n  for (let i = 0; i < SIZE; i++) {\n    let j = 0,\n      k = 0;\n    while (k < SIZE) {\n      const [x1, y1, x2, y2] =\n        type === \"up\"\n          ? [i, j, i, k]\n          : type === \"down\"\n            ? [i, SIZE - 1 - j, i, SIZE - 1 - k]\n            : type === \"left\"\n              ? [j, i, k, i]\n              : [SIZE - 1 - j, i, SIZE - 1 - k, i];\n      const from = grid[y2][x2];\n      const to = grid[y1][x1];\n      if (from === null) {\n        k++;\n        continue;\n      }\n      // Stay\n      if (j === k) {\n        const id = new Date().getTime();\n        const final = { x: x1, y: y1, value: from.final.value };\n        grid[y1][x1] = { id, from: null, to: null, final };\n        k++;\n        continue;\n      }\n      // Move\n      if (to === null) {\n        if (!changed) changed = true;\n        const id = new Date().getTime();\n        const final = { x: x1, y: y1, value: from.final.value };\n        grid[y1][x1] = { id, from: { ...from.final }, to: null, final };\n        grid[y2][x2] = null;\n        k++;\n        continue;\n      }\n      // Merge\n      if (from.final.value === to.final.value) {\n        if (!changed) changed = true;\n        const value = from.final.value + to.final.value;\n        score += value;\n        const id = new Date().getTime();\n        const final = { x: x1, y: y1, value };\n        grid[y1][x1] = {\n          id,\n          from: { ...from.final },\n          to: { ...to.final },\n          final\n        };\n        grid[y2][x2] = null;\n        j++;\n        k++;\n        continue;\n      }\n      j++;\n    }\n  }\n  return { score, changed, grid };\n}\n\nexport function removeAnimation(grid: Grid) {\n  return grid.map<(GridCell | null)[]>(row => {\n    return row.map<GridCell | null>((cell: GridCell | null) => {\n      if (cell === null) return null;\n      const id = new Date().getTime();\n      return { id, from: null, to: null, final: { ...cell.final } };\n    });\n  });\n}\n\nexport function isDone(grid: Grid) {\n  playMusic(audioGO)\n  for (let y = 0; y < grid.length; y++) {\n    for (let x = 0; x < grid[0].length; x++) {\n      const cur = grid[y][x];\n      if (cur === null) return false;\n      const left = y - 1 < 0 ? undefined : grid[y - 1][x],\n        up = x - 1 < 0 ? undefined : grid[y][x - 1];\n      if (left === undefined && up === undefined) continue;\n      if (left !== undefined && left.final.value === cur.final.value)\n        return false;\n      if (up !== undefined && up.final.value === cur.final.value) return false;\n    }\n  }\n  return true;\n}\n","import { useCallback, useEffect, useReducer } from \"react\";\n\nimport useMount from \"../../hooks/useMount\";\n\nimport { State, Reducer, UseGame, Grid, GridCell } from \"./types\";\nimport {\n  generateGrid,\n  converGrid,\n  randomSetCell,\n  move,\n  removeAnimation,\n  isDone\n} from \"./utils\";\n\nconst STORAGE_NAME = \"game-state\";\nconst ANIMATION_TIMEOUT = 500;\n\nfunction updateLocalStorage(\n  grid: Grid,\n  score: number,\n  bestScore: number,\n  step: number\n) {\n  const storageValue = JSON.stringify({\n    grid: converGrid(grid),\n    score,\n    bestScore,\n    step\n  });\n  localStorage.setItem(STORAGE_NAME, storageValue);\n}\n\nconst initialState: State = {\n  initiated: false,\n  grid: null,\n  score: 0,\n  bestScore: 0,\n  changing: false,\n  step: 0,\n  isDone: false\n};\nconst reducer: Reducer = (state, action) => {\n  let newState = { ...state };\n  switch (action.type) {\n    case \"init\":\n      newState = {\n        initiated: true,\n        grid: action.grid,\n        score: action.score,\n        bestScore:\n          action.score > state.bestScore ? action.score : state.bestScore,\n        changing: false,\n        step: action.step,\n        isDone: action.isDone\n      };\n      break;\n\n    case \"set-grid\":\n      newState.grid = action.grid;\n      break;\n\n    case \"add-score\":\n      const score = state.score + action.score;\n      newState.score = score;\n      newState.bestScore = score > state.bestScore ? score : state.bestScore;\n      break;\n\n    case \"set-changing\":\n      let step = state.step;\n      if (action.changing) step++;\n      return { ...state, changing: action.changing, step };\n\n    case \"set-is-done\":\n      newState.isDone = action.isDone;\n      break;\n\n    default:\n      return state;\n  }\n  updateLocalStorage(\n    newState.grid,\n    newState.score,\n    newState.bestScore,\n    newState.step\n  );\n  return newState;\n};\n\nconst useGame: UseGame = () => {\n  const { isMount } = useMount();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // Initiate\n  useEffect(() => {\n    if (isMount && !state.initiated) {\n      let grid: null | Grid = null,\n        score = 0,\n        bestScore = 0,\n        step = 0,\n        isDone = false;\n      const storageValue = localStorage.getItem(STORAGE_NAME);\n      if (storageValue) {\n        const storageState = JSON.parse(storageValue);\n        if (storageState) {\n          if (storageState.grid) grid = generateGrid(storageState.grid);\n          if (storageState.score) score = storageState.score;\n          if (storageState.bestScore) bestScore = storageState.bestScore;\n          if (storageState.step) step = storageState.step;\n          if (storageState.isDone) isDone = storageState.isDone;\n        }\n      }\n      if (grid === null) {\n        grid = generateGrid();\n        grid = randomSetCell(grid, 2);\n      }\n      dispatch({ type: \"init\", grid, score, bestScore, step, isDone });\n      localStorage.setItem(STORAGE_NAME, storageValue);\n    }\n  }, [isMount, state.initiated]);\n\n  const onNewGame = useCallback(() => {\n    let grid = generateGrid();\n    grid = randomSetCell(grid, 2);\n    const score = 0,\n      bestScore = state.bestScore,\n      step = 0,\n      isDone = false;\n    dispatch({ type: \"init\", grid, score, bestScore, step, isDone });\n  }, [state.bestScore]);\n\n  const afterAnimation = (grid: GridCell[][]) => {\n    setTimeout(() => {\n      dispatch({ type: \"set-grid\", grid: removeAnimation(grid) });\n      dispatch({ type: \"set-changing\", changing: false });\n    }, ANIMATION_TIMEOUT);\n  };\n  const slideTo = useCallback(\n    \n    (diffX: number, diffY: number) => {\n      \n      if (state.changing || state.isDone) return;\n      const dir =\n        Math.abs(diffX) > Math.abs(diffY)\n          ? diffX > 0\n            ? \"right\"\n            : \"left\"\n          : diffY > 0\n          ? \"down\"\n          : \"up\";\n\n      let { score, changed, grid } = move(state.grid, dir);\n      if (changed) {\n        grid = randomSetCell(grid);\n        dispatch({ type: \"set-grid\", grid });\n        dispatch({ type: \"add-score\", score });\n        dispatch({ type: \"set-changing\", changing: true });\n        afterAnimation(grid);\n      } else {\n        dispatch({ type: \"set-is-done\", isDone: isDone(state.grid) });\n      }\n    },\n    [state.changing, state.grid, state.isDone]\n  );\n\n  return { ...state, onNewGame, slideTo };\n};\n\nexport default useGame;\n","import { useReducer } from \"react\";\n\ninterface State {\n  isDown: boolean;\n  x: number | null;\n  y: number | null;\n}\n\nconst initialState: State = {\n  isDown: false,\n  x: null,\n  y: null\n};\n\ntype Action =\n  | {\n      type: \"reset\";\n    }\n  | {\n      type: \"set-is-down\";\n      x: number;\n      y: number;\n    };\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n\n    case \"set-is-down\":\n      return {\n        ...state,\n        isDown: true,\n        x: action.x,\n        y: action.y\n      };\n\n    default:\n      return state;\n  }\n};\n\ninterface MouseEventHandler {\n  (event: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\n}\ninterface TouchEventHandler {\n  (event: React.TouchEvent<HTMLDivElement>): void;\n}\n\ninterface UseSlide {\n  (callback?: (diffX: number, diffY: number) => void, halt?: boolean): {\n    onMouseDown: null | MouseEventHandler;\n    onMouseUp: null | MouseEventHandler;\n    onMouseLeave: null | MouseEventHandler;\n    onTouchStart: null | TouchEventHandler;\n    onTouchEnd: null | TouchEventHandler;\n  };\n}\nconst useSlide: UseSlide = (callback, halt = false) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const onMouseStart: MouseEventHandler = event => {\n    event.preventDefault();\n    dispatch({ type: \"set-is-down\", x: event.screenX, y: event.screenY });\n  };\n\n  const onMouseEnd: MouseEventHandler = event => {\n    event.preventDefault();\n    if (state.isDown) {\n      const diffX = event.screenX - state.x,\n        diffY = event.screenY - state.y;\n      dispatch({ type: \"reset\" });\n      callback(diffX, diffY);\n    }\n  };\n\n  const onTouchStart: TouchEventHandler = event => {\n    event.preventDefault();\n    const touch = event.touches[0];\n    if (touch) {\n      dispatch({ type: \"set-is-down\", x: touch.screenX, y: touch.screenY });\n    }\n  };\n\n  const onTouchEnd: TouchEventHandler = event => {\n    event.preventDefault();\n    if (state.isDown) {\n      const touch = event.changedTouches[0];\n      if (touch) {\n        const diffX = touch.screenX - state.x,\n          diffY = touch.screenY - state.y;\n        callback(diffX, diffY);\n      }\n      dispatch({ type: \"reset\" });\n    }\n  };\n\n  return {\n    onMouseDown: halt ? null : onMouseStart,\n    onMouseUp: halt ? null : onMouseEnd,\n    onMouseLeave: halt ? null : onMouseEnd,\n    onTouchStart: halt ? null : onTouchStart,\n    onTouchEnd: halt ? null : onTouchEnd\n  };\n};\n\nexport default useSlide;\n","import * as React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport { Theme } from \"@material-ui/core\";\n\nimport Board from \"../Board\";\nimport { Cell, CellNew, CellMove, CellMerge } from \"../Cell\";\n\nimport NewGameButton from \"./NewGameButton\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport DoneCover from \"./DoneCover\";\n\nimport useGame from \"./useGame\";\n\nimport useSlide from \"../../hooks/useSlide\";\n\nconst useStyles = makeStyles<Theme>(theme => {\n  return createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      }\n    },\n    controller: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\"\n    }\n  });\n});\n\nconst Game: React.FC = () => {\n  const {\n    grid,\n    score,\n    bestScore,\n    step,\n    isDone,\n    changing,\n    onNewGame,\n    slideTo\n  } = useGame();\n  const classes = useStyles({});\n\n  const slideHandlers = useSlide(slideTo, changing);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Header step={step} score={score} bestScore={bestScore} />\n        <NewGameButton onNewGame={onNewGame} />\n        <Board {...slideHandlers}>\n          {grid !== null &&\n            grid.map(row => {\n              return row.map(cell => {\n                if (cell === null) return null;\n                // stay:  from === null && to === null\n                // new:   from === null && to !== null\n                // move:  from !== null && to === null\n                // merge: from !== null && to !== null\n                const { id, from, to, final } = cell;\n                const key = `grid-cell-${final.x}-${final.y}-${\n                  final.value\n                }-${id}`;\n                // new\n                if (from === null && to !== null) {\n                  return <CellNew key={key} final={final} />;\n                }\n                // move\n                if (from !== null && to === null) {\n                  return <CellMove key={key} from={from} final={final} />;\n                }\n                // merge\n                if (from !== null && to !== null) {\n                  return (\n                    <CellMerge key={key} from={from} to={to} final={final} />\n                  );\n                }\n                // stay\n                return <Cell key={key} {...final} />;\n              });\n            })}\n          <DoneCover isDone={isDone} />\n        </Board>\n        <Footer step={step} score={score} bestScore={bestScore} />\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import Game from \"./Game\";\n\nexport default Game;\n","import Helmet from \"./Helmet\";\n\nexport default Helmet;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst AppHelmet: React.FC = () => {\n  return (\n    <Helmet>\n      <title>2048 Game</title>\n    </Helmet>\n  );\n};\n\nexport default AppHelmet;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport Game from \"./components/Game\";\nimport Helmet from \"./components/Helmet\";\n\nimport \"./style/index.css\";\n\nfunction App() {\n  return (\n    <>\n      <Helmet />\n      <Game />\n    </>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}